{"version":3,"sources":["webpack:///webpack/bootstrap 24ed320ec51e6581917d","webpack:///./src/app.js","webpack:///./src/views/ui.js","webpack:///./src/models/countries.js","webpack:///./src/models/country.js","webpack:///./src/models/animals.js","webpack:///./src/models/animal.js","webpack:///./src/models/mapWrapper.js","webpack:///./src/views/attenUI.js","webpack:///./src/views/quizUI.js","webpack:///./src/views/quizUi.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA,sC;AACA;AACA;AACA,OAAM;;AAEN;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,yBAAyB;AAC/C;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;;;AAGA;;AAEA,qB;;;;;;AC1DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qB;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;;AAGH;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,yBAAyB;AAChD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK,E;;AAEL;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA,yC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,E;AACb;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS,E;AACT,gB;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,U;AACA,QAAO,E;AACP,gB;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAsC,+CAA+C;;AAErF;AACA;AACA;;AAEA;AACA;AACA,SAAQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA0B,+CAA+C;AACzE,S;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;;AAEA,yB;;;;;;ACxTA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,gB;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4B;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,0B;;;;;;ACXA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0B;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA,yB;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA,wBAAuB,+D;AACvB,2C;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,mDAAmD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAY;AACZ,8CAA6C,mDAAmD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,a;AACR;;;AAGA;;AAEA;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,M;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA,yB;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,M;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA,yB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 24ed320ec51e6581917d","var UI = require(\"./views/ui\");\nvar AttenUI = require(\"./views/attenUI.js\");\nvar QuizUI = require(\"./views/quizUi.js\");\nvar Animals = require(\"./models/animals.js\");\n\nvar animal = null;\n\nvar app = function() {\n  var ui = new UI();\n\n\n  var attenUI = new AttenUI();\n  var quizUI = new QuizUI();\n\n  // var animals = new Animals();\n  // animals.allAPI(function(result){ \n  //   animal = result[0];\n  //   // console.log(animal.buttonValues)\n  // })\n\n  attenUI.startText();\n\n\n//   var nextButton = document.querySelector(\"#next-button\");\n//   // nextButton.onclick = ui.handleNextButton();\n//   // console.log(\"1\")\n//   nextButton.onclick = function(){\n//     quizUI.createAnswerButtons(animal);\n//     quizUI.changeAttenTalk(animal);\n//     // console.log(\"3\")\n\n// ////////////Question Buttons\n\n//     var answerButton = document.querySelectorAll(\".animalNameButton\");\n//     // console.log(answerButton)\n\n//     var answerButtonsClickBehavour = function() {\n//       var firedButton = this.innerText;\n//       // console.log(firedButton)\n//       quizUI.answerQuestion(animal, firedButton);\n//     }\n\n//     for (var i = 0; i < answerButton.length; i++) {\n//       answerButton[i].onclick = answerButtonsClickBehavour;\n//     }\n//   }\n\n\n  var answerQuestionOne = document.querySelector(\".animalNameButton\");\n  answerQuestionOne.onclick = quizUI.answerQuestionOne();\n\n\n  var mountainSounds = document.querySelector(\"#savannah\")\n  mountainSounds.play();\n\n  \n}\n\nwindow.onload = app;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 0\n// module chunks = 0","var Countries = require(\"../models/countries.js\");\nvar Country = require(\"../models/country.js\");\nvar Animals = require(\"../models/animals.js\");\nvar Animal = require(\"../models/animal.js\");\nvar MapWrapper = require(\"../models/mapWrapper.js\");\n\nvar AttenUI = require(\"./attenUI.js\");\nvar QuizUI = require(\"./quizUI.js\");\nvar attenUI = new AttenUI();\nvar quizUI = new QuizUI();\n// var QuizUI = new QuizUI();\n\nvar UI = function(){ \n  var goButton = document.querySelector(\"#go-button\");\n  goButton.onclick = this.handleGoButton.bind(this);\n\n\n  var resetButton = document.querySelector(\"#reset-button\");\n  resetButton.onclick = this.handleResetButton.bind(this);\n\n  this.countries = new Countries();\n  this.animals = new Animals();\n\n  this.countries.allAPI(function(result){\n    this.renderCountriesList(result);\n  }.bind(this));\n\n  \n//creates the map\nmapDiv = document.querySelector(\"#mapDiv\");\nvar centre = {lat: 20, lng: 0 };\nthis.map = new MapWrapper(centre, 2);\n}\n\nUI.prototype = {\n  renderCountriesList: function(countriesAPI){\n    var countriesDiv = document.querySelector(\"#countries\");\n    var selectLabel = document.createElement(\"h3\");\n    selectLabel.innerText = \"SELECT A COUNTRY: \";\n    var countriesSelect = document.createElement(\"select\");\n    countriesSelect.id = \"selector\";\n    for (var country of countriesAPI){\n      var countryChoice = document.createElement(\"option\");\n      countryChoice.innerText = country.name;\n      countryChoice.value = JSON.stringify(country);\n\n      countriesDiv.appendChild(selectLabel);\n      selectLabel.appendChild(countriesSelect);\n      countriesSelect.appendChild(countryChoice);\n    }\n  },\n\n  handleGoButton: function(){\n    var selectedCountry = document.querySelector(\"#selector\");\n    var countryObject = JSON.parse(selectedCountry.value);\n    var self = this;\n    attenUI.goButton(countryObject)\n    var animals = new Animals();\n    // console.log(this);\n    var animalObject = null;\n\n    animals.allAPI(function(animalsAPI){ \n      for(var animal of animalsAPI){\n        if (animal.country === countryObject.name) {\n          animalObject = animal;\n        }\n      }\n    });\n\n    var nextButton = document.querySelector(\"#next-button\");\n      // nextButton.onclick = ui.handleNextButton();\n      // console.log(\"1\")\n      nextButton.onclick = function(){\n        quizUI.createAnswerButtons(animalObject);\n        quizUI.changeAttenTalk(animalObject);\n        // console.log(\"3\")\n\n    ////////////Question Buttons\n\n    var answerButton = document.querySelectorAll(\".animalNameButton\");\n        // console.log(answerButton)\n\n        var answerButtonsClickBehavour = function() {\n          var firedButton = this.innerText;\n          // console.log(firedButton)\n          quizUI.answerQuestion(animalObject, firedButton);\n        }\n\n        for (var i = 0; i < answerButton.length; i++) {\n          answerButton[i].onclick = answerButtonsClickBehavour;\n        }\n      }\n\n\n    // add country to countriesVisited collection in db\n    this.addCountryToDb(function(){\n      var countries = new Countries;\n      countries.allVisited(function(result){\n        self.renderNotebookCountry(result);\n      }.bind(this));\n    });\n\n    // add animal to animalsVisited collection in db\n    this.addAnimalToDb(function(){\n      var animals = new Animals;\n      animals.allVisited(function(result){\n        self.renderNotebookAnimal(result);\n      }.bind(this));\n    });    \n\n    // pan to the selected country on the map\n    this.map.panTo(countryObject.coords[0], countryObject.coords[1]);\n\n    \n    // attenUI.goButton(countryObject);\n\n    // // initiate arrival text\n    // var attDiv = document.querySelector(\"#attenborough\");\n    // attDiv.innerHTML = \"\";\n    // var arrivalText = document.createElement(\"p\");\n    // arrivalText.innerText = countryObject.arrivalText;\n    // attDiv.appendChild(arrivalText);\n\n  },\n\n  addAnimalToDb: function(callback){\n    var selectedCountry = document.querySelector(\"#selector\");\n    var countryObject = JSON.parse(selectedCountry.value);\n    var animals = new Animals();\n\n    var animalObject = null;\n\n    animals.allAPI(function(animalsAPI){ \n      for(var animal of animalsAPI){\n        if (animal.country === countryObject.name) {\n          animalObject = animal;\n        }\n      }\n    });\n\n    animals.allVisited(function(animalsVisited){\n      if (animalsVisited.length === 0){\n            // add animal to animalsVisited collection in db\n            var newAnimal = {\n              name: animalObject.name,\n              country: animalObject.country,\n              questions: animalObject.questions,\n              answerText: animalObject.answerText,\n              image: animalObject.image,\n              finishingText: animalObject.finishingText\n            }\n\n            animals.makePost(\"/animals\", newAnimal, function(data){\n              console.log(\"new animals added to db\", newAnimal.name);\n            }); \n          }\n        });\n\n    animals.allVisited(function(animalsVisited){\n      var matches = 0;\n      var arrayLength = animalsVisited.length\n      for(var animal of animalsVisited){\n        if (animal.name !== animalObject.name) {\n          matches ++;\n        }\n      }\n\n      if (matches === arrayLength){\n        console.log(animalObject.name + \" has been visited before. Not added to DB\");\n            // add country to countriesVisited collection in db\n            var newAnimal = {\n              name: animalObject.name,\n              country: animalObject.country,\n              questions: animalObject.questions,\n              answerText: animalObject.answerText,\n              image: animalObject.image,\n              finishingText: animalObject.finishingText\n            }\n            animals.makePost(\"/animals\", newAnimal, function(data){\n            });\n          }\n        }); \n    callback(); \n  },\n\n  addCountryToDb: function(callback){\n    var selectedCountry = document.querySelector(\"#selector\");\n    var countryObject = JSON.parse(selectedCountry.value);\n    var countries = new Countries;\n    countries.allVisited(function(countriesVisited){\n      if (countriesVisited.length === 0){\n        // add country to countriesVisited collection in db\n        var newCountry = {\n          name: countryObject.name,\n          coords: [countryObject.coords[0], countryObject.coords[1]],\n          arrivalText: countryObject.arrivalText,\n          countryFlag: countryObject.countryFlag\n        }\n        countries.makePost(\"/countries\", newCountry, function(data){\n        });\n      };\n    });\n\n    countries.allVisited(function(countriesVisited){\n      var matches = 0;\n      var arrayLength = countriesVisited.length;\n\n      for(var country of countriesVisited){\n        if (country.name !== countryObject.name){\n          matches ++ ;\n        }\n      }\n\n      if(matches === arrayLength){\n          // add country to countriesVisited collection in db\n          var newCountry = {\n            name: countryObject.name,\n            coords: [countryObject.coords[0], countryObject.coords[1]],\n            arrivalText: countryObject.arrivalText,\n            countryFlag: countryObject.countryFlag\n          }\n          countries.makePost(\"/countries\", newCountry, function(data){\n          });\n        }       \n      }); \n    callback(); \n  },\n\n  renderNotebookCountry: function(countryList){\n    // filtering out the unique visited countries for flags and markers(may have been visited more than once).\n    console.log(\"countryList\", countryList);\n\n    var visitedCountriesFlags = [];\n    for (var country of countryList){\n     visitedCountriesFlags.push(country.countryFlag);\n     var marker = this.map.addMarker({lat: country.coords[0], lng: country.coords[1]});\n\n         // add the info window to the map\n         this.map.addInfoWindow(this.map, marker, country.name);\n       }\n\n       var filterVisitedCountries = visitedCountriesFlags.filter(function(country, index, countryList){\n         return visitedCountriesFlags.indexOf(country) === index;\n       });\n\n       //filling the notebook with visitedCountries flags\n       var notebookFlags = document.querySelector(\"#flagsDiv\");\n       notebookFlags.innerHTML = \"\";\n       for(var country of filterVisitedCountries){\n         var countryVisited = document.createElement(\"img\");\n         countryVisited.src = country;\n         countryVisited.width = 100;\n         countryVisited.id = \"flag\";\n         notebookFlags.appendChild(countryVisited);\n       }\n\n       //add the polyline to the map\n       var pathCoords = [];\n       for (var country of countryList){\n         pathCoords.push({lat: country.coords[0], lng: country.coords[1]});\n       } \n       this.map.addPolyline(pathCoords);\n     },\n\n     renderNotebookAnimal: function(animalList){\n      // filtering out the unique visited animals for photos (may have been visited more than once).\n      var visitedAnimals = [];\n      for (var animal of animalList){\n       visitedAnimals.push(animal);\n     }\n     console.log(\"animals visited\", visitedAnimals);\n\n     var filterVisitedAnimals = visitedAnimals.filter(function(animal, index, animalList){\n       return visitedAnimals.indexOf(animal) === index;\n     });\n\n         //filling the notebook with visitedAnimals images\n         var notebookPhotos = document.querySelector(\"#photosDiv\");\n         notebookPhotos.innerHTML = \"\";\n         for(var animal of filterVisitedAnimals){\n           var animalNote = document.createElement(\"h5\");\n           animalNote.innerText = animal.name + \"\\n\";\n           var photo = document.createElement(\"img\");\n           photo.id = \"photo\"\n           photo.src = animal.image;\n           notebookPhotos.appendChild(animalNote);\n           animalNote.appendChild(photo);\n         }\n       },\n\n       handleResetButton: function(){\n        window.location.reload();\n        var self = this;\n\n        this.countries.makeDeleteRequest(\"/countries\", function(){\n          console.log(\"countriesVisited dropped\");\n          var countries = new Countries;\n          countries.allVisited(function(result){\n            self.renderNotebookCountry(result);\n          }.bind(this));\n        });\n\n        this.animals.makeDeleteRequest(\"/animals\", function(){\n          console.log(\"animalsVisited dropped\");\n          var animals = new Animals;\n          animals.allVisited(function(result){\n            self.renderNotebookAnimal(result);\n          }.bind(this));\n        });\n      }\n    }\n\n    module.exports = UI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/ui.js\n// module id = 1\n// module chunks = 0","var Country = require(\"./country\");\n\nvar Countries = function(){\n\n}\n\nCountries.prototype = {\n  makeRequest: function(url, callback){\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, false);\n    request.onload = callback;\n    request.send();\n  },\n\n  makePost: function(url, newData, callback){\n    var data = JSON.stringify(newData);\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", url);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.onload = callback;\n    request.send(data);\n  },\n\n  makeDeleteRequest: function(url, callback){\n    var request = new XMLHttpRequest();\n    request.open(\"DELETE\", url);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.onload = callback;\n    request.send();\n  },\n\n  allVisited: function(callback){\n  var self = this;\n    this.makeRequest(\"http://localhost:3000/countries\", function() {\n      if (this.status !== 200)\n        return;      \n      var jsonString = this.responseText;\n      var result = JSON.parse(jsonString);\n      callback(result);\n    });\n  }, \n\n  allAPI: function(callback){\n    var self = this;\n    this.makeRequest(\"http://localhost:3000/countries/api\", function(){\n      if(this.status !== 200) \n        return;\n      var jsonString = this.responseText;\n      var results = JSON.parse(jsonString);\n      var countriesAPI = self.populateDropDownList(results);\n      callback(countriesAPI);\n    })\n  },\n\n  populateDropDownList: function(results){\n    var Countries = [];\n    for (var result of results){\n      var country = new Country (result);\n    Countries.push(country);\n    }\n    return Countries;\n  }\n\n}\n\nmodule.exports = Countries;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/countries.js\n// module id = 2\n// module chunks = 0","var Country = function(options){\n  this.name = options.name;\n  this.coords = options.coords;\n  this.arrivalText = options.arrivalText;\n  this.countryFlag = options.countryFlag;\n}\n\nCountry.prototype = {\n\n}\n\nmodule.exports = Country;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/country.js\n// module id = 3\n// module chunks = 0","var Animal = require(\"./animal\");\n\nvar Animals = function(){\n\n}\n\nAnimals.prototype = {\n  makeRequest: function(url, callback){\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, false);\n    request.onload = callback;\n    request.send();\n  },\n\n  makePost: function(url, newData, callback){\n    console.log(\"makePost started\");\n    var data = JSON.stringify(newData);\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", url);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.onload = callback;\n    request.send(data);\n  },\n\n  makeDeleteRequest: function(url, callback){\n    var request = new XMLHttpRequest();\n    request.open(\"DELETE\", url);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.onload = callback;\n    request.send();\n  },\n\n  allVisited: function(callback){\n    var self = this;\n    this.makeRequest(\"http://localhost:3000/animals\", function(){\n      if(this.status !== 200) return;\n      var jsonString = this.responseText;\n      var results = JSON.parse(jsonString);\n      var animalsDB = self.populateAnimalsList(results);\n      callback(animalsDB);\n    })\n  },\n\n  allAPI: function(callback){\n  var self = this;\n    this.makeRequest(\"http://localhost:3000/animals/api\", function() {\n      if (this.status !== 200){\n        return;\n      }\n      var jsonString = this.responseText;\n      var result = JSON.parse(jsonString);\n      callback(result);\n    });\n  }, \n\n  populateAnimalsList: function(results){\n    var animals = [];\n    for (var result of results){\n      var animal = new Animal (result);\n    animals.push(animal);\n    }\n    return animals;\n  }\n\n}\n\nmodule.exports = Animals;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/animals.js\n// module id = 4\n// module chunks = 0","var Animal = function(options){\n  this.name = options.name;\n  this.country = options.country;\n  this.questions = options.questions;\n  this.answerText = options.answerText;\n  this.image = options.image;\n  this.buttonValues = options.buttonValues;\n}\n\nAnimal.prototype = {\n \n}\n\n  //use on button press do this function, if this happens restart\n\n\nmodule.exports = Animal;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/animal.js\n// module id = 5\n// module chunks = 0","var MapWrapper = function(coords, zoom) {\n  var container = document.querySelector(\"#mapDiv\");\n    this.googleMap = new google.maps.Map(container, {\n    center: coords,\n    zoom: zoom\n    });\n}\n\n\nMapWrapper.prototype = {\n  addMarker: function(coords){\n    // var icon = {\n    //     url: \"/resources/Plane-icon.png\",\n    //     scaledSize: new google.maps.Size(40, 40),\n    //     origin: new google.maps.Point(0, 10),\n    //     anchor: new google.maps.Point(30, 10)\n    // };\n\n    var marker = new google.maps.Marker({\n      position: coords,\n      // icon: icon,\n      map: this.googleMap\n    });\n    console.log(\"marker added\");\n    return marker;\n  },\n\n  addPolyline: function(pathCoords){\n    var lineSymbol = {\n       path: \"M43.734,21c-3.631,0-15.092,0-15.092,0  S16.25,5.188,16.047,4.938s-0.422-0.594-1.125-0.672c-0.859-0.095-1.969-0.203-2.328-0.234c-0.406-0.035-0.719,0.141-0.496,0.734  C12.388,5.539,18.748,21,18.748,21H6.034c0,0-2.458-4.722-2.878-5.531C2.965,15.101,2.557,15.014,2,15H1.297  c-0.125,0-0.312,0-0.281,0.344C1.058,15.811,3,25,3,25s-1.888,9.197-1.984,9.656C0.953,34.953,1.172,35,1.297,35H2  c0.966-0.009,0.954-0.079,1.156-0.469C3.576,33.722,6.034,29,6.034,29h12.714c0,0-6.36,15.461-6.65,16.234  c-0.223,0.594,0.09,0.77,0.496,0.734c0.359-0.031,1.469-0.139,2.328-0.234c0.703-0.078,0.922-0.422,1.125-0.672S28.643,29,28.643,29  s11.461,0,15.092,0c3.766,0,5.264-3.031,5.264-4S47.484,21,43.734,21z\",\n\n       anchor: new google.maps.Point(50,25),\n       scale: 0.7,\n       strokeColor: \"red\",\n       fillColor: \"red\",\n       fillOpacity: 1,\n       strokeWeight: 1,\n       rotation: 270\n     };\n\n    var iconPlane = {\n        icon: lineSymbol,\n        offset: '100%'\n      };\n\n    var line = new google.maps.Polyline({\n      path: pathCoords,\n      geodesic: true,\n      strokeColor: '#FF0000',\n      strokeOpacity: 1.0,\n      strokeWeight: 2,\n      icons: [iconPlane],\n      map: this.googleMap\n    });\n\n    line.setMap(this.googleMap);\n    this.animateFlight(line, pathCoords, lineSymbol);\n  },\n\n  animateFlight: function(line, pathCoords, lineSymbol) {\n      var count = 0;\n      window.setInterval(function() {\n        count = (count + 1) % 200;\n\n        var icons = line.get('icons');\n        icons[0].offset = (count / 2) + '%';\n        line.set('icons', icons);\n    }, 20);\n  },\n\n  panTo: function(lat, lng){\n    this.googleMap.panTo(new google.maps.LatLng(lat,lng));\n  },\n\n  addInfoWindow: function(map, marker, contentString){\n    var infoWindow = new google.maps.InfoWindow({\n          content: contentString\n        });\n      marker.addListener(\"click\", function(){\n      infoWindow.open(this.googleMap, marker);\n    })\n  }\n\n  // geoLocate: function(runArray){\n\n  //   console.log(runArray);\n  //   navigator.geolocation.getCurrentPosition(function(position) {\n  //     var centre = {lat: position.coords.latitude, lng: position.coords.longitude}; \n  //     this.googleMap.setCenter(centre); \n  //     var marker = this.addMarker(centre);\n  //     var nearRuns = document.querySelector(\"#near-runs\");\n  //     this.addInfoWindow(this.googleMap, marker, \"You Are Here\")\n  //     for (var run of runArray){\n  //       if (Math.sqrt(Math.pow((run.start_latlng[0] - position.coords.latitude),2))< 0.005){\n  //         var runMarker = this.addMarker({lat: run.start_latlng[0], lng: run.start_latlng[1]});\n  //         this.addInfoWindow(this.googleMap, runMarker, run.name);\n  //         var nearRunsInfo = document.createElement(\"p\");\n  //         nearRunsInfo.innerText = run.name + \" | \" + ((run.distance/1000).toFixed(2)) + \"km\";\n  //         nearRuns.appendChild(nearRunsInfo);\n  //         var division = document.createElement(\"hr\");\n  //         nearRuns.appendChild(division);\n  //         console.log(run.start_latlng[0])\n  //         console.log(position.coords.latitude);\n  //         console.log(run.start_latlng[0]-position.coords.latitude)\n  //         console.log(run.name + \"added\");\n\n  //       } else if (Math.sqrt(Math.pow((run.start_latlng[1] - position.coords.longitude),2)) < 0.005){\n  //         var runMarker = this.addMarker({lat: run.start_latlng[0], lng: run.start_latlng[1]});\n  //         this.addInfoWindow(this.googleMap, runMarker, run.name);\n  //         var nearRunsInfo = document.createElement(\"p\");\n  //         nearRunsInfo.innerText = run.name + \" | \" + ((run.distance/1000).toFixed(2)) + \"km\";\n  //         nearRuns.appendChild(nearRunsInfo);\n  //         var division = document.createElement(\"hr\");\n  //         nearRuns.appendChild(division);\n  //         console.log(run.start_latlng[1])\n  //         console.log(position.coords.longitude);\n  //         console.log(run.start_latlng[1]-position.coords.longitude);\n  //         console.log(run.name + \"added\");\n  //       }\n  //     }\n  //   }.bind(this)); \n  // }\n\n\n}\n\nmodule.exports = MapWrapper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/mapWrapper.js\n// module id = 6\n// module chunks = 0","var Countries = require(\"../models/countries.js\");\nvar Country = require(\"../models/country.js\");\nvar Animals = require(\"../models/animals.js\");\nvar Animal = require(\"../models/animal.js\");\nvar MapWrapper = require(\"../models/mapWrapper.js\");\n\nvar AttenUI = function(){\n  var attenTalk = document.querySelector(\"#attenTalk\");\n  this.buttons = document.querySelector(\"#control-container\");\n  // console.log(this.buttons)\n}\n\nAttenUI.prototype = {\n  goButton: function(countryObject){\n    // console.log(this.buttons)\n\n    attenTalk.innerText = countryObject.arrivalText;\n\n  },\n  startText: function(){\n    this.startText = \"Welcome. To a Journey around the globe with me, David Attenborough. \\n On this journey, we are going to see some of the worlds most endangered animals, and together we shall keep a journal, taking note of these animals and the countries we find them in. \\n To choose where to travel, use the dropdown bar at the top to choose a location to visit, and press 'EXPLORE'. \\n Let's start our expedition!\",\n\n    attenTalk.innerText = this.startText;\n  },\n  wrongText: function(){\n    this.wrongText = \"I don't think that animal is quite right! How about another guess?\";\n    attenTalk.innerText = this.wrongText;\n  },\n  reasoningText: function(){\n    this.reasoningText = \"The reason for our expedition, is that animals are going extinct faster and faster, there are species your grandparents may have seen, which you will never get the chance to! This is mostly because of towns and cities getting bigger, and taking up the spaces where the animals used to make home. If we don't do something about this, your grandchilderen might not have many animals to learn about and see!\";\n    attenTalk.innerText = this.reasoningText;\n  },\n  finalWrongText: function(animalObject){\n    this.finalWrongText = animalObject.answerText;\n    attenTalk.innerText = this.finalWrongText;\n  },\n  answerCorrectText: function(animalObject){\n    this.answerCorrectText = animalObject.finishingText;\n    attenTalk.innerText = this.answerCorrectText;\n  }\n}\n\nmodule.exports = AttenUI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/attenUI.js\n// module id = 7\n// module chunks = 0","var Countries = require(\"../models/countries.js\");\nvar Country = require(\"../models/country.js\");\nvar Animals = require(\"../models/animals.js\");\nvar Animal = require(\"../models/animal.js\");\nvar AttenUI = require(\"./attenUI.js\");\nvar UI = require(\"./ui.js\");\n\nvar counter = 0;\nvar finalQuestion = false;\n\nvar QuizUI = function(){\n\n  // var next = document.querySelector(\"#next-button\");\n  // nextButton.onclick = this.handleNextButton.bind(this);\n}\n\nQuizUI.prototype = {\n  createAnswerButtons: function(animal){\n    var buttonDiv = document.querySelector(\"#QButtons\");\n    buttonDiv.innerHTML = \"\";\n\n    var qAnswers = animal.buttonValues;\n\n    for (var answer of qAnswers) {\n      var answerButtons = document.querySelector(\"#QButtons\");\n      var answerButton = document.createElement(\"button\");\n      answerButton.id = \"answerButton\";\n      answerButton.classList.add(\"animalNameButton\");\n      answerButton.innerText = answer;\n      answerButtons.appendChild(answerButton);\n    }\n  },\n\n  changeAttenTalk: function(animal) {\n    counter ++;\n    questionsObject = animal.questions;\n    // console.log(questionsObject);\n    if (counter == 1) {\n      attenTalk.innerText = questionsObject.one;\n    }\n    else if (counter == 2) {\n      attenTalk.innerText = questionsObject.two;\n    } \n    else if (counter == 3) {\n      attenTalk.innerText = questionsObject.three\n      finalQuestion = true;\n    }\n    else { console.log(\"finished!\")\n    addAnimalToDb();\n    }\n  },\n\n  answerQuestion: function(animal, button) {\n    attenUI = new AttenUI();\n    if (animal.name === button && !finalQuestion) {\n      attenUI.answerCorrectText(animal);\n      // addAnimalToDb();\n      // renderNotebookAnimal();\n    } else if (animal.name !== button && !finalQuestion){\n      \n      attenUI.wrongText();\n\n      // console.log(this)\n      // this.changeAttenTalk(animal);\n      // console.log(\"string of attenUI.wrongText\");\n    } else if (animal.name !== button && finalQuestion){\n      attenUI.finalWrongText(animal);\n    } else if (animal.name === button && finalQuestion){\n      attenUI.answerCorrectText(animal);\n    }\n  }\n}\n\n\nmodule.exports = QuizUI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/quizUI.js\n// module id = 8\n// module chunks = 0","var Countries = require(\"../models/countries.js\");\nvar Country = require(\"../models/country.js\");\nvar Animals = require(\"../models/animals.js\");\nvar Animal = require(\"../models/animal.js\");\nvar AttenUI = require(\"./attenUI.js\");\nvar UI = require(\"./ui.js\");\n\nvar counter = 0;\nvar finalQuestion = false;\n\nvar QuizUI = function(){\n\n  // var next = document.querySelector(\"#next-button\");\n  // nextButton.onclick = this.handleNextButton.bind(this);\n}\n\nQuizUI.prototype = {\n  createAnswerButtons: function(animal){\n    var buttonDiv = document.querySelector(\"#QButtons\");\n    buttonDiv.innerHTML = \"\";\n\n    var qAnswers = animal.buttonValues;\n\n    for (var answer of qAnswers) {\n      var answerButtons = document.querySelector(\"#QButtons\");\n      var answerButton = document.createElement(\"button\");\n      answerButton.id = \"answerButton\";\n      answerButton.classList.add(\"animalNameButton\");\n      answerButton.innerText = answer;\n      answerButtons.appendChild(answerButton);\n    }\n  },\n\n  changeAttenTalk: function(animal) {\n    counter ++;\n    questionsObject = animal.questions;\n    // console.log(questionsObject);\n    if (counter == 1) {\n      attenTalk.innerText = questionsObject.one;\n    }\n    else if (counter == 2) {\n      attenTalk.innerText = questionsObject.two;\n    } \n    else if (counter == 3) {\n      attenTalk.innerText = questionsObject.three\n      finalQuestion = true;\n    }\n    else { console.log(\"finished!\")\n    addAnimalToDb();\n    }\n  },\n\n  answerQuestion: function(animal, button) {\n    attenUI = new AttenUI();\n    if (animal.name === button && !finalQuestion) {\n      attenUI.answerCorrectText(animal);\n      // addAnimalToDb();\n      // renderNotebookAnimal();\n    } else if (animal.name !== button && !finalQuestion){\n      \n      attenUI.wrongText();\n\n      // console.log(this)\n      // this.changeAttenTalk(animal);\n      // console.log(\"string of attenUI.wrongText\");\n    } else if (animal.name !== button && finalQuestion){\n      attenUI.finalWrongText(animal);\n    } else if (animal.name === button && finalQuestion){\n      attenUI.answerCorrectText(animal);\n    }\n  }\n}\n\n\nmodule.exports = QuizUI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/quizUi.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}