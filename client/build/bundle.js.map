{"version":3,"sources":["webpack:///webpack/bootstrap 2315c089bb7834903794","webpack:///./src/app.js","webpack:///./src/views/ui.js","webpack:///./src/models/countries.js","webpack:///./src/models/country.js","webpack:///./src/models/mapWrapper.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qB;;;;;;ACVA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qC;AACA;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,yCAAyC;AACrE;AACA;;AAEA;;AAEA,qB;;;;;;AC5EA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4B;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,0B;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA,gCAA+B;;AAE/B;;AAEA,SAAQ;AACR,OAAM;;AAEN;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA,SAAQ;AACR,OAAM;;AAEN;;AAEA;AACA;AACA,wBAAuB,+D;AACvB,2C;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,mDAAmD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAY;AACZ,8CAA6C,mDAAmD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,a;AACR;;;AAGA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2315c089bb7834903794","var UI = require(\"./views/ui\");\n\nvar app = function() {\n  var ui = new UI();\n  var goButton = document.querySelector(\"#go-button\");\n  goButton.onclick = ui.handleGoButton;\n  // var mountainSounds = document.querySelector(\"#savannah\")\n  // mountainSounds.play();\n}\n\nwindow.onload = app;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 0\n// module chunks = 0","var Countries = require(\"../models/countries.js\");\nvar Country = require(\"../models/country.js\");\nvar MapWrapper = require(\"../models/mapWrapper.js\");\n\nvar UI = function(){\n  this.countries = new Countries();\n\n  this.countries.allDB(function(result){\n    this.renderArk(result);\n  }.bind(this));\n  \n  this.countries.all(function(result){\n    this.render(result);\n  }.bind(this));\n\n  mapDiv = document.querySelector(\"#mapDiv\");\n  mapDiv.innerHTML = \"\";\n  var centre = {lat: 20, lng: 0 };\n  this.map = new MapWrapper(centre, 2);\n}\n\nUI.prototype = {\n  render: function(countriesList){\n    var countriesDiv = document.querySelector(\"#countries\");\n    var selectLabel = document.createElement(\"h3\");\n    selectLabel.innerText = \"SELECT A COUNTRY: \"\n    var countriesSelect = document.createElement(\"select\");\n      for (var country of countriesList){\n        var place = document.createElement(\"option\");\n        place.innerText = country.name;\n        place.value = JSON.stringify(country);\n\n        countriesDiv.appendChild(selectLabel);\n        selectLabel.appendChild(countriesSelect);\n        countriesSelect.appendChild(place);\n      }\n    console.log(this.map);\n  },\n\n  handleGoButton: function(){\n    var selectedCountry = document.querySelector(\"select\");\n    var countryObject = JSON.parse(selectedCountry.value);\n    var addedCountry = document.createElement(\"p\");\n    addedCountry.innerText = \"Country: \" + countryObject.name + \"\\n Capital: \" + countryObject.capital;\n    var arkDiv = document.querySelector(\"#ark\");\n    arkDiv.appendChild(addedCountry);\n     \n    var newCountry = {\n      name: countryObject.name,\n      capital: countryObject.capital,\n      xcoord: countryObject.latlng[0],\n      ycoord: countryObject.latlng[1]\n    }\n\n    console.log(\"country added to bucket list: \", countryObject.name);\n    var countries = new Countries();    \n    countries.makePost(\"/\", newCountry, function(data){\n    });\n\n    document.location.reload(true);\n  },\n\n  renderArk: function(bucketList){\n    var arkDiv = document.querySelector(\"#ark\");\n      for(var country of bucketList){\n        var arkCountry = document.createElement(\"p\");\n        arkCountry.innerText = \"Country: \" + country.name + \"\\n Capital: \" + country.capital;\n        arkDiv.appendChild(arkCountry);\n        console.log(\"Country in the loop:\", country.name);\n        console.log(this.map);\n        this.map.addMarker({lat: country.xcoord, lng: country.ycoord});\n      }\n  }\n\n}\n\nmodule.exports = UI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/ui.js\n// module id = 1\n// module chunks = 0","var Country = require(\"./country\");\n\nvar Countries = function(){\n\n}\n\nCountries.prototype = {\n  makeRequest: function(url, callback){\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url);\n    request.onload = callback;\n    request.send();\n  },\n\n  makePost: function(url, newData, callback){\n    var data = JSON.stringify(newData);\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", url);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.onload = callback;\n    request.send(data);\n  },\n\n  all: function(callback){\n  var self = this;\n    this.makeRequest(\"https://restcountries.eu/rest/v1/all\", function() {\n      if (this.status !== 200){\n        return;\n      }\n      var jsonString = this.responseText;\n      var result = JSON.parse(jsonString);\n      console.log(result);\n      callback(result);\n    });\n  }, \n\n  allDB: function(callback){\n    var self = this;\n    this.makeRequest(\"http://localhost:3000/api\", function(){\n      if(this.status !== 200) return;\n      var jsonString = this.responseText;\n      var results = JSON.parse(jsonString);\n      var countriesDB = self.populateBucketList(results);\n      callback(countriesDB);\n    })\n  },\n\n  populateBucketList: function(results){\n    var blCountries = [];\n    for (var result of results){\n      var country = new Country (result);\n      blCountries.push(country);\n    }\n    return blCountries;\n  }\n\n}\n\nmodule.exports = Countries;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/countries.js\n// module id = 2\n// module chunks = 0","var Country = function(options){\n  this.name = options.name;\n  this.capital = options.capital;\n  this.xcoord = options.xcoord;\n  this.ycoord = options.ycoord;\n}\n\nCountry.prototype = {\n\n}\n\nmodule.exports = Country;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/country.js\n// module id = 3\n// module chunks = 0","var MapWrapper = function(coords, zoom) {\n  var container = document.querySelector(\"#mapDiv\");\n    this.googleMap = new google.maps.Map(container, {\n    center: coords,\n    zoom: zoom\n    });\n}\n\n\nMapWrapper.prototype = {\n  addMarker: function(coords){\n    var marker = new google.maps.Marker({\n      position: coords,\n      map: this.googleMap\n    });\n    console.log(\"marker added\");\n    return marker;\n  },\n\n  // addClickEvent: function(){\n  //   google.maps.event.addListener(this.googleMap, \"click\", function(event){\n  //     console.log(\"map has been clicked!\");\n\n  //     console.log(event);\n\n  //     console.log(\"coords selected are: \" + event.latLng.lat(), event.latLng.lng());\n  //     var coordsSelected = {lat: event.latLng.lat(), lng: event.latLng.lng()};\n\n  //     this.addMarker(coordsSelected);\n\n  //   }.bind(this));\n  // },\n\n  // addInfoWindow: function(map, marker, contentString){\n  //   var infoWindow = new google.maps.InfoWindow({\n  //         content: contentString\n  //       });\n  //     marker.addListener(\"click\", function(){\n  //     infoWindow.open(this.googleMap, marker);\n  //   })\n  // }, \n\n  // geoLocate: function(runArray){\n\n  //   console.log(runArray);\n  //   navigator.geolocation.getCurrentPosition(function(position) {\n  //     var centre = {lat: position.coords.latitude, lng: position.coords.longitude}; \n  //     this.googleMap.setCenter(centre); \n  //     var marker = this.addMarker(centre);\n  //     var nearRuns = document.querySelector(\"#near-runs\");\n  //     this.addInfoWindow(this.googleMap, marker, \"You Are Here\")\n  //     for (var run of runArray){\n  //       if (Math.sqrt(Math.pow((run.start_latlng[0] - position.coords.latitude),2))< 0.005){\n  //         var runMarker = this.addMarker({lat: run.start_latlng[0], lng: run.start_latlng[1]});\n  //         this.addInfoWindow(this.googleMap, runMarker, run.name);\n  //         var nearRunsInfo = document.createElement(\"p\");\n  //         nearRunsInfo.innerText = run.name + \" | \" + ((run.distance/1000).toFixed(2)) + \"km\";\n  //         nearRuns.appendChild(nearRunsInfo);\n  //         var division = document.createElement(\"hr\");\n  //         nearRuns.appendChild(division);\n  //         console.log(run.start_latlng[0])\n  //         console.log(position.coords.latitude);\n  //         console.log(run.start_latlng[0]-position.coords.latitude)\n  //         console.log(run.name + \"added\");\n\n  //       } else if (Math.sqrt(Math.pow((run.start_latlng[1] - position.coords.longitude),2)) < 0.005){\n  //         var runMarker = this.addMarker({lat: run.start_latlng[0], lng: run.start_latlng[1]});\n  //         this.addInfoWindow(this.googleMap, runMarker, run.name);\n  //         var nearRunsInfo = document.createElement(\"p\");\n  //         nearRunsInfo.innerText = run.name + \" | \" + ((run.distance/1000).toFixed(2)) + \"km\";\n  //         nearRuns.appendChild(nearRunsInfo);\n  //         var division = document.createElement(\"hr\");\n  //         nearRuns.appendChild(division);\n  //         console.log(run.start_latlng[1])\n  //         console.log(position.coords.longitude);\n  //         console.log(run.start_latlng[1]-position.coords.longitude);\n  //         console.log(run.name + \"added\");\n  //       }\n  //     }\n  //   }.bind(this)); \n  // }\n\n\n}\n\nmodule.exports = MapWrapper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/mapWrapper.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}